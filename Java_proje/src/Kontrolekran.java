
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author 90553
 */
public class Kontrolekran extends javax.swing.JFrame {
    
     ArrayList<FaturaBilgisi> kayit=new ArrayList<>();  //record=kayıt   
     ArrayList<ilaclar>allIlacekran= new ArrayList<>();
     ArrayList<Hasta>allHastaekranı= new ArrayList<>();

    /**
     * Creates new form Kontrolekran
     */
    public Kontrolekran() {
        initComponents();
        readAllhData();
        readAlliData();
        //readAllRData();
        LoadMed();
        
    } 
    
    /*void readAllRData() {
    try {
        File pfile = new File("kayit.txt");
        
        Scanner scanner = new Scanner(pfile);
        while (scanner.hasNextLine()) {
            String data = scanner.nextLine();
            String[] curData = data.split(";");
            FaturaBilgisi kayit = new FaturaBilgisi();
            kayit.setHastaID(Integer.parseInt(curData[0]));
           
            kayit.setUcret(Integer.parseInt(curData[1]));
            kayit.setOneri(curData[2]);
            kayit.setGun(curData[3]);
            
            String[] mlist=curData[4].split(",");
            for (int i=0; i<mlist.length;i++){
                kayit.setIlacID(Integer.parseInt(mlist[i]));
            
            
            }
            
          allKayit.add(kayit);
        }
        scanner.close();
    } catch (FileNotFoundException | NumberFormatException e) {
        e.printStackTrace();
    }
}*/
    
    // ilaç verilerini tutugumuz txt ten verileri alıp listeye eklemek için kullanılır
    void LoadMed()
    {
        allM.removeAllItems();
        //ilaçlara ait olan verileri aldığımız kısım
        for(int i=0; i<allIlacekran.size();i++){
            allM.addItem(allIlacekran.get(i).getId()+";"+allIlacekran.get(i).getIsim());
        
        
        }

    }

    void readAllhData(){
          try{
              File pfile=new File("hData.txt"); //kaydettiğimiz dosyayı aldıgımız kısım
              Scanner scanner= new Scanner(pfile);
              //tarayıcı da herhangi bir satır olup olmadıgını kontrol eder
              while(scanner.hasNextLine()){
                  String data= scanner.nextLine();
                  String [] curData= data.split(";");
                  Hasta hasta= new Hasta();
                  hasta.setId(Integer.parseInt(curData[0]));
                  
                  hasta.setIsim(curData[1]);
                  hasta.setYas(Integer.parseInt(curData[2]));
                  hasta.setCinsiyet(curData[3]);
                  hasta.setAdres(curData[4]);
             
                  allHastaekranı.add(hasta);
                }
              scanner.close();
              
          
          }catch(FileNotFoundException | NumberFormatException e){
              
          }
          
    
    
    }

    void readAlliData() {
    try {
        File pfile = new File("iData.txt");
        Scanner scanner = new Scanner(pfile);
        while (scanner.hasNextLine()) {
            String data = scanner.nextLine();
            String[] curData = data.split(";");
            ilaclar ilac = new ilaclar();
            ilac.setId(Integer.parseInt(curData[0]));
            ilac.setIsim(curData[1]);
            ilac.setSatisfiyati(Integer.parseInt(curData[2]));
            ilac.setAlisfiyati(Integer.parseInt(curData[3]));
            ilac.setMiktar(Integer.parseInt(curData[4]));
            ilac.setTanim(curData[5]);

            allIlacekran.add(ilac);
        }
        scanner.close();
    } catch (FileNotFoundException | NumberFormatException e) {
        e.printStackTrace();
    }
}
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        hasta = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        allM = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        mList = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ucret = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        oneri = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        miktar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        hasta.setBackground(new java.awt.Color(255, 255, 255));
        hasta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 5));
        hasta.setForeground(new java.awt.Color(204, 204, 255));
        hasta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hastaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hastaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hastaMouseExited(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kontrol2.png"))); // NOI18N

        javax.swing.GroupLayout hastaLayout = new javax.swing.GroupLayout(hasta);
        hasta.setLayout(hastaLayout);
        hastaLayout.setHorizontalGroup(
            hastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hastaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16))
        );
        hastaLayout.setVerticalGroup(
            hastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 102, 0));
        jLabel2.setText("Danışan Seans Bilgileri");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 0));
        jLabel3.setText("Terapistim");

        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(102, 0, 102));
        jButton3.setText("Ana Sayfa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel1.setText("Ücret");

        id.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel4.setText("İlaçlar");

        allM.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        allM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mList.setColumns(20);
        mList.setRows(5);
        jScrollPane1.setViewportView(mList);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 204));
        jButton1.setText("İlaç Ekle");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel5.setText("İlaç Listesi");

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel6.setText("Danışan T.C.");

        ucret.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N

        oneri.setColumns(20);
        oneri.setRows(5);
        jScrollPane2.setViewportView(oneri);

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel7.setText("Öneri");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 153, 153));
        jButton2.setText("Kaydet");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel8.setText("Miktar");

        miktar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ucret, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(5, 5, 5)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(32, 32, 32))
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(allM, 0, 361, Short.MAX_VALUE)
                                        .addComponent(miktar))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(98, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(213, 833, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(229, 229, 229))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(allM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ucret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(miktar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(5, 5, 5)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(119, 119, 119))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(hasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(51, 51, 51))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(138, 138, 138)
                    .addComponent(jLabel3)
                    .addContainerGap(700, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(hasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(67, 67, 67)
                    .addComponent(jLabel3)
                    .addContainerGap(28, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(919, 619));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    private void hastaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hastaMouseClicked
        Hastaekranı hastalar=new Hastaekranı();
        this.setVisible(false);
        hastalar.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_hastaMouseClicked

    
    private void hastaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hastaMouseEntered
        hasta.setBackground(java.awt.Color.decode("#deedee"));
        // TODO add your handling code here:
    }//GEN-LAST:event_hastaMouseEntered

    private void hastaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hastaMouseExited
        hasta.setBackground(java.awt.Color.WHITE);
        // TODO add your handling code here:
    }//GEN-LAST:event_hastaMouseExited

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setVisible(false);
        new Home().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    //mevcut miktarın uygun olup olmadıgını kontrol eder ve ihityacımız olandan fazla mı dıye kontrol eder
    /*boolean checkForMiktar(){
        int currMId=Integer.parseInt(allM.getSelectedItem().toString().split(";")[0]);
        for(int i=0;i<allIlacekran.size();i++){
            if(currMId==allIlacekran.get(i).getId()){
        
                  if(Integer.parseInt(miktar.getText())>allIlacekran.get(i).getMiktar()){
                      return true;
                  }
        
             }
        
        }
   
    return false;
    }*/
    boolean checkForMiktar() {
    // Miktar alanının boş olup olmadığını kontrol et
    if (miktar.getText().isEmpty()) {
        return true;
    }

    String selectedItemString = allM.getSelectedItem().toString();

    // Null kontrolü yap
    if (selectedItemString == null) {
        return true;
    }

    // İlk önce ";" karakterine göre ayır, ardından ilk elemanı al
    int currMId = Integer.parseInt(selectedItemString.split(";")[0]);

    for (int i = 0; i < allIlacekran.size(); i++) {
        if (currMId == allIlacekran.get(i).getId()) {
            try {
                int miktarValue = Integer.parseInt(miktar.getText());

                if (miktarValue > allIlacekran.get(i).getMiktar()) {
                    return true;
                }
            } catch (NumberFormatException e) {
                // Eğer miktar bir sayısal değilse veya boşsa
                return true;
            }
        }
    }

    return false;
}
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

// eger mıktar ve ilac seçilmemişse bu mesajı verir
       if(miktar.getText().equals("")||allM.getSelectedItem().toString().equals("")){
           
             JOptionPane.showMessageDialog(null,"Lütfen İlacı Seçin ve miktarı Girin!"); 
       
            }
       //miktarın gecerli olup olmadıgı kontrol edilir değilse bu mesajı verir
       else if (checkForMiktar()){
           JOptionPane.showMessageDialog(null,"Girdiğiniz Miktar Geçerli Değil!"); 
       
       
       
       }
       // eger her ikisi de degilse ilacı lısteye ekler
       else{
       
       mList.append(allM.getSelectedItem()+";"+miktar.getText()+"\n");
       miktar.setText("");
       }
       

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
//hasta kimliginin olup olmadıgı kontrol edilir
    boolean HastaExist(){
        
        
        for(int i=0;i<allHastaekranı.size();i++){
            if(id.getText().equals(allHastaekranı.get(i).getId()+"")){
            return false;
            }
        
        }
    
    
    return true;
    }
    //ilacı yazdırma fonksıyonu
    
    void SaveAlliData(){
        try{
            FileWriter fileWriter= new FileWriter("iData.txt",true);
            for(int i=0;i<allIlacekran.size();i++){
                fileWriter.write(allIlacekran.get(i).getId()+";"+allIlacekran.get(i).getIsim()+";"+allIlacekran.get(i).getSatisfiyati()+";"+allIlacekran.get(i).getAlisfiyati()+";"+allIlacekran.get(i).getMiktar()+";"+allIlacekran.get(i).getTanim()+"\n");
            
            }
            fileWriter.close();
        
        }catch(Exception ex){
          ex.printStackTrace();  
        }
    
    }
    //dosyaya yazdırma ve kaydetme  fonksıyonu
    void SaveAllRData(){
        try{
            FileWriter fileWriter= new FileWriter("kayit.txt");
            for(int i=0;i<kayit.size();i++){
                fileWriter.write(kayit.get(i).getHastaID()+";"+kayit.get(i).getUcret()+";"+kayit.get(i).getOneri()+";"+kayit.get(i).getGun()+"\n");
                ArrayList<Integer> tmp=kayit.get(i).getIlacID();
                for(int j=0;j< tmp.size();j++){
                    fileWriter.write(tmp.get(j)+",");
                
                
                }
                fileWriter.write("\n");
                
            
            }
            fileWriter.close();
        
        }catch(Exception e){
           e.printStackTrace();  
        }
    
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         //kimlik text kutucugu boşsa bu mesaj verilir
        
         if(id.getText().equals("")|| ucret.getText().equals("")||oneri.getText().equals("")){
         
         
          JOptionPane.showMessageDialog(null,"Lütfen Tüm Alanları Girdiğinizden Emin Olun!");
         }
        
         else if(HastaExist()){
               JOptionPane.showMessageDialog(null,"Bu Hasta Kimliği Mevcut Değil"); 
          
          }
          
          else{
                try{
                // Validate if id is a valid integer
            int parsedId = Integer.parseInt(id.getText());

            // Validate if ucret is a valid integer
            int parsedUcret = Integer.parseInt(ucret.getText());

             
             FaturaBilgisi faturabilgisi=new FaturaBilgisi();
             int total=0;
             String Bill="";
            faturabilgisi.setHastaID(parsedId);
            faturabilgisi.setUcret(parsedUcret);
            
           
             String[] Mdata=mList.getText().split("\n");
             for(int i=0; i<Mdata.length;i++){
                 faturabilgisi.setIlacID(Integer.parseInt(Mdata[i].split(";")[0]));
                 //ilacın miktarını alma 
                 int curM = Integer.parseInt(Mdata[i].split(";")[2]);
                 int curId = Integer.parseInt(Mdata[i].split(";")[0]);
                 
                 for (int j=0;j<allIlacekran.size();j++){
                     if(allIlacekran.get(j).getId()==curId){
                         Bill+=allIlacekran.get(j).getIsim()+"   =   "+allIlacekran.get(j).getSatisfiyati()+"\n"; //Bill=Fatura
                         total+=allIlacekran.get(j).getSatisfiyati();
                         allIlacekran.get(j).setMiktar(allIlacekran.get(j).getMiktar()-curM);
                     }
                 }
             }
             faturabilgisi.setOneri(oneri.getText());
             DateFormat cDateFormat= new SimpleDateFormat("dd:MM:yyyy");
             Date cdate= new Date();
             faturabilgisi.setDate(cDateFormat.format(cdate));
             kayit.add(faturabilgisi);
             
             SaveAlliData();
             SaveAllRData();
             
             Bill+="\nTotal İlaç Maliyeti="+total;
             Bill+="\nTotal Doktor Ücreti="+ucret.getText();
             Bill+="Total = "+(total+Integer.parseInt(ucret.getText()));
             
             id.setText((""));
             ucret.setText("");
             oneri.setText("");
             mList.setText("");
             JOptionPane.showMessageDialog(null,"Faturanız:\n"+Bill); 
              /*} catch (NumberFormatException e) {
                 JOptionPane.showMessageDialog(null, "Danışan T.C. ve Ücret Tam sayı olmalıdır");*/
                
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(null,"Seans Bilgileriniz Kaydedildi"); 
                    
                     //System.out.println("Exception during data saving: " + e.getMessage());e.printStackTrace();
                     System.out.println(ex);
                     ex.printStackTrace();
                    
                }
                  }
          
          
   
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kontrolekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kontrolekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kontrolekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kontrolekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kontrolekran().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> allM;
    private javax.swing.JPanel hasta;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea mList;
    private javax.swing.JTextField miktar;
    private javax.swing.JTextArea oneri;
    private javax.swing.JTextField ucret;
    // End of variables declaration//GEN-END:variables
}
